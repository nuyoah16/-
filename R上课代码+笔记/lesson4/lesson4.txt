> #第一部分，数据的导入和导出
> #part1:根据不同的拓展名选取不同的读取工具
> #例如:.txt/.csv
> #同时可将R中的内容导出到.txt/.csv等文件中
> #part2:读取excel文件
> #part3:读取Matlab文件
> #part4:读取图片信息
> #part5:读取数据库中信息
> #详细见2.3 Data import and export
> #第二部分，数据可视化
> y=matrix(1:12,3,4)
> y
     [,1] [,2] [,3] [,4]
[1,]    1    4    7   10
[2,]    2    5    8   11
[3,]    3    6    9   12
> hist(y)
> y1=seq(1:10)
> y1
 [1]  1  2  3  4  5  6  7  8  9 10
> hist(y1)
> n=100
> a=rnorm(n)
> plot(a,xlab="Day",ylab="Return",type='l',col='blue')
> b=rnorm(n,sd=0.3)
> points(b,col='red',type='l',lty='dotted',lwd=2)
> #保存图像
> dev.copy2pdf(file='file.pdf')
quartz 
     2 
> #保存上述执行的图片到file.pdf
> x=rt(100,df=4)
> hist(x,col='light blue')
> #三维图形
> x <- seq(-10, 10, .3)
> y <- x
> rotsinc <- function(x,y)
+ {
+     sinc <- function(x) { y <- sin(x)/x ; y[is.na(y)] <- 1; y }
+     sinc( sqrt(x^2+y^2) )
+ }
> z <- outer(x, y, rotsinc)
> 
> persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightgreen",
+       ltheta = 120, shade = 0.75, ticktype = "detailed",
+       xlab = "X", ylab = "Y", zlab = "Z")
> title(main = expression(z == sinc(sqrt(x^2 + y^2))))
> #将三维图像映射到平面
> x=seq(-10,10,.3)
> y=x
> z=outer(x,y,rotsinc)
> image(x,y,z)
> filled.contour(x,y,z)
> read.table(file='/Users/jiang/Desktop/data.txt')
Error in scan(file = file, what = what, sep = sep, quote = quote, dec = dec,  : 
  line 2 did not have 2 elements
> read.table(file='/Users/jiang/Desktop/data.txt',sep='\t',header=TRUE)
Error in scan(file = file, what = what, sep = sep, quote = quote, dec = dec,  : 
  line 4 did not have 3 elements
> read.table(file='/Users/jiang/Desktop/data.txt',sep='\t\t',header=TRUE)
Error in scan(file, what = "", sep = sep, quote = quote, nlines = 1, quiet = TRUE,  : 
  invalid 'sep' value: must be one byte
> install.packages('openxlsx')
--- Please select a CRAN mirror for use in this session ---
trying URL 'https://mirrors.bfsu.edu.cn/CRAN/bin/macosx/big-sur-arm64/contrib/4.2/openxlsx_4.2.5.2.tgz'
Content type 'application/octet-stream' length 3189889 bytes (3.0 MB)
==================================================
downloaded 3.0 MB


The downloaded binary packages are in
	/var/folders/sb/gfnlnbbn60j67yrwh4nx3h000000gn/T//Rtmp9sNYJC/downloaded_packages
> read.xlsx('/Users/jiang/Desktop/data.xlsx',startRow=1,colNames=TRUE,rowNames=FALSE)
Error in read.xlsx("/Users/jiang/Desktop/data.xlsx", startRow = 1, colNames = TRUE,  : 
  could not find function "read.xlsx"
> library('openxlsx')
> read.xlsx('/Users/jiang/Desktop/data.xlsx',startRow=1,colNames=TRUE,rowNames=FALSE)
     Date Contest.number
1   44568            202
2   44569            203
3   44570            204
4   44571            205
5   44572            206
6   44573            207
7   44574            208
8   44575            209
9   44576            210
10  44577            211
11  44578            212
12  44579            213
13  44580            214
14  44581            215
15  44582            216
16  44583            217
17  44584            218
18  44585            219
19  44586            220
20  44587            221
21  44588            222
22  44589            223
23  44590            224
24  44591            225
25  44592            226
26  44593            227
27  44594            228
28  44595            229
29  44596            230
30  44597            231
31  44598            232
32  44599            233
33  44600            234
34  44601            235
35  44602            236
36  44603            237
37  44604            238
38  44605            239
39  44606            240
40  44607            241
41  44608            242
42  44609            243
43  44610            244
44  44611            245
45  44612            246
46  44613            247
47  44614            248
48  44615            249
49  44616            250
50  44617            251
51  44618            252
52  44619            253
53  44620            254
54  44621            255
55  44622            256
56  44623            257
57  44624            258
58  44625            259
59  44626            260
60  44627            261
61  44628            262
62  44629            263
63  44630            264
64  44631            265
65  44632            266
66  44633            267
67  44634            268
68  44635            269
69  44636            270
70  44637            271
71  44638            272
72  44639            273
73  44640            274
74  44641            275
75  44642            276
76  44643            277
77  44644            278
78  44645            279
79  44646            280
80  44647            281
81  44648            282
82  44649            283
83  44650            284
84  44651            285
85  44652            286
86  44653            287
87  44654            288
88  44655            289
89  44656            290
90  44657            291
91  44658            292
92  44659            293
93  44660            294
94  44661            295
95  44662            296
96  44663            297
97  44664            298
98  44665            299
99  44666            300
100 44667            301
101 44668            302
102 44669            303
103 44670            304
104 44671            305
105 44672            306
106 44673            307
107 44674            308
108 44675            309
109 44676            310
110 44677            311
111 44678            312
112 44679            313
113 44680            314
114 44681            315
115 44682            316
116 44683            317
117 44684            318
118 44685            319
119 44686            320
120 44687            321
121 44688            322
122 44689            323
123 44690            324
124 44691            325
125 44692            326
126 44693            327
127 44694            328
128 44695            329
129 44696            330
130 44697            331
131 44698            332
132 44699            333
133 44700            334
134 44701            335
135 44702            336
136 44703            337
137 44704            338
138 44705            339
139 44706            340
140 44707            341
141 44708            342
142 44709            343
143 44710            344
144 44711            345
145 44712            346
146 44713            347
147 44714            348
148 44715            349
149 44716            350
150 44717            351
151 44718            352
152 44719            353
153 44720            354
154 44721            355
155 44722            356
156 44723            357
157 44724            358
158 44725            359
159 44726            360
160 44727            361
161 44728            362
162 44729            363
163 44730            364
164 44731            365
165 44732            366
166 44733            367
167 44734            368
168 44735            369
169 44736            370
170 44737            371
171 44738            372
172 44739            373
173 44740            374
174 44741            375
175 44742            376
176 44743            377
177 44744            378
178 44745            379
179 44746            380
180 44747            381
181 44748            382
182 44749            383
183 44750            384
184 44751            385
185 44752            386
186 44753            387
187 44754            388
188 44755            389
189 44756            390
190 44757            391
191 44758            392
192 44759            393
193 44760            394
194 44761            395
195 44762            396
196 44763            397
197 44764            398
198 44765            399
199 44766            400
200 44767            401
201 44768            402
202 44769            403
203 44770            404
204 44771            405
205 44772            406
206 44773            407
207 44774            408
208 44775            409
209 44776            410
210 44777            411
211 44778            412
212 44779            413
213 44780            414
214 44781            415
215 44782            416
216 44783            417
217 44784            418
218 44785            419
219 44786            420
220 44787            421
221 44788            422
222 44789            423
223 44790            424
224 44791            425
225 44792            426
226 44793            427
227 44794            428
228 44795            429
229 44796            430
230 44797            431
231 44798            432
232 44799            433
233 44800            434
234 44801            435
235 44802            436
236 44803            437
237 44804            438
238 44805            439
239 44806            440
240 44807            441
241 44808            442
242 44809            443
243 44810            444
244 44811            445
245 44812            446
246 44813            447
247 44814            448
248 44815            449
249 44816            450
250 44817            451
251 44818            452
252 44819            453
253 44820            454
254 44821            455
255 44822            456
256 44823            457
257 44824            458
258 44825            459
259 44826            460
260 44827            461
261 44828            462
262 44829            463
263 44830            464
264 44831            465
265 44832            466
266 44833            467
267 44834            468
268 44835            469
269 44836            470
270 44837            471
271 44838            472
272 44839            473
273 44840            474
274 44841            475
275 44842            476
276 44843            477
277 44844            478
278 44845            479
279 44846            480
280 44847            481
281 44848            482
282 44849            483
283 44850            484
284 44851            485
285 44852            486
286 44853            487
287 44854            488
288 44855            489
289 44856            490
290 44857            491
291 44858            492
292 44859            493
293 44860            494
294 44861            495
295 44862            496
296 44863            497
297 44864            498
298 44865            499
299 44866            500
300 44867            501
301 44868            502
302 44869            503
303 44870            504
304 44871            505
305 44872            506
306 44873            507
307 44874            508
308 44875            509
309 44876            510
310 44877            511
311 44878            512
312 44879            513
313 44880            514
314 44881            515
315 44882            516
316 44883            517
317 44884            518
318 44885            519
319 44886            520
320 44887            521
321 44888            522
322 44889            523
323 44890            524
324 44891            525
325 44892            526
326 44893            527
327 44894            528
328 44895            529
329 44896            530
330 44897            531
331 44898            532
332 44899            533
333 44900            534
334 44901            535
335 44902            536
336 44903            537
337 44904            538
338 44905            539
339 44906            540
340 44907            541
341 44908            542
342 44909            543
343 44910            544
344 44911            545
345 44912            546
346 44913            547
347 44914            548
348 44915            549
349 44916            550
350 44917            551
351 44918            552
352 44919            553
353 44920            554
354 44921            555
355 44922            556
356 44923            557
357 44924            558
358 44925            559
359 44926            560
> my_data=read.xlsx('/Users/jiang/Desktop/data.xlsx',startRow=1,colNames=TRUE,rowNames=FALSE);
> a=my_data$Contest.number
> a
  [1] 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
 [27] 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253
 [53] 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279
 [79] 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
[105] 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331
[131] 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357
[157] 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383
[183] 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409
[209] 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435
[235] 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461
[261] 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487
[287] 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513
[313] 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539
[339] 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560
> plot(a,xlab='Day',ylab='Population',type='l',col='light green')
> b=0.5*a;
> points(b,col='yellow',type='l',lty='dotted',lwd=2)
Error in plot.xy(xy.coords(x, y), type = type, ...) : 
  plot.new has not been called yet
> b=rnorm(n,sd=0.3)
> points(b,col='yellow',type='l',lty='dotted',lwd=2)
Error in plot.xy(xy.coords(x, y), type = type, ...) : 
  plot.new has not been called yet
> dev.off()
null device 
          1 
> plot(a,xlab='Day',ylab='Population',type='l',col='light green')
> points(b,col='yellow',type='l',lty='dotted',lwd=2)
> b=0.5*a;
> points(b,col='yellow',type='l',lty='dotted',lwd=2)
Error in plot.xy(xy.coords(x, y), type = type, ...) : 
  plot.new has not been called yet
> plot.new()
> plot(a,xlab='Day',ylab='Population',type='l',col='light green')
> points(b,col='yellow',type='l',lty='dotted',lwd=2)
> 